JUMP @MAIN
LOADI @a
STOREI @c_swap
LOADI @b
STOREI @a_swap
LOADI @c
STOREI @b_swap
LOADI @a
STOREI @x_gcd
LOADI @b
STOREI @y_gcd
LOADI @x_gcd
SUBI @y_gcd
STOREI @x_gcd
JUMP @NEW_Pointer_T+1    [NEW_Pointer_F+1]
SET @x_gcd
STORE @gcd_a
SET @y_gcd
STORE @gcd_b
SET @{HERE+2} [JUMP_BACK after procedure]
STORE @gcd_JUMP
JUMP @gcd  [NEW_Pointer_T+1]
JUMP @HERE_While    [NEW_Pointer+1]
LOADI @x
STOREI @c_gcd
GET @a_MAIN
GET @b_MAIN
GET @c_MAIN
GET @d_MAIN
SET @a_MAIN
STORE @MAIN_a
SET @b_MAIN
STORE @MAIN_b
SET @x_MAIN
STORE @MAIN_c
SET @{HERE+2} [JUMP_BACK after procedure]
STORE @MAIN_JUMP
JUMP @MAIN
SET @c_MAIN
STORE @MAIN_a
SET @d_MAIN
STORE @MAIN_b
SET @y_MAIN
STORE @MAIN_c
SET @{HERE+2} [JUMP_BACK after procedure]
STORE @MAIN_JUMP
JUMP @MAIN
SET @x_MAIN
STORE @MAIN_a
SET @y_MAIN
STORE @MAIN_b
SET @z_MAIN
STORE @MAIN_c
SET @{HERE+2} [JUMP_BACK after procedure]
STORE @MAIN_JUMP
JUMP @MAIN
PUT @z_MAIN
HALT
